server:
  compression:
    enabled: true
    mime-types: application/json, text/html, text/xml, text/plain,text/css, text/javascript, application/javascript, application/octet-stream
    min-response-size: 1024
  servlet:
    context-path: /aiv
  port: 8080

spring:
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration
  resources:
    static-locations: classpath:/static/,file:///var/lib/aiv/repository/images/
  jackson:
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
    time-zone: UTC
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres # database for aiv schema
    username: postgres
    password: postgres
    driverClassName: org.postgresql.Driver
  datasource1:
    url: jdbc:postgresql://localhost:5432/postgres?currentSchema=security # database for security schema
    username: postgres
    password: postgres
    driverClassName: org.postgresql.Driver
  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER
  jpa:
    hibernate:
      ddl-auto: update
  liquibase:
   aiv:
     enabled: true
     change-log: classpath:db/changelog/db.changelog-aiv.sql
   security:
     enabled: true
     change-log: classpath:db/changelog/db.changelog-security.sql
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: task-consumer-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: com.aiv.cluster.MapDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: com.aiv.cluster.MapSerializer

#For JNDI Datasources
datasources:
  dslist[0]: '{"jndi-name":"jdbc/ActiveIDB","driver-class-name":"org.postgresql.Driver","url":"jdbc:postgresql://localhost:5432/postgres","username":"postgres","password":"postgres"}'

#Application some default values
# slatKey -> For stoken decryption SecretKey
# ivspec -> For stoken Iv Spec Key
# securityClass -> which security class we need to use for authentication and user/roles details
# isJira -> Are we using Jira authentication or not
app:
  slatKey: 0123456789abcdef
  ivspec: fedcba9876543210
  imgLocation: /var/lib/aiv/repository/images/
  appLocation: /var/lib/aiv/repository/APP/
  repositoryLocation: /var/lib/aiv/repository
  logDir: /var/log/aiv
  deliveryLocation: /var/lib/aiv/repository/delivery
  database: postgresql
  securityClass: com.security.services.SimpleAuthImpl #com.simple.services.SimpleAuthImpl/com.utility.JiraAuthImpl
  isJira: false
  noofreports: 10
  task:
    kafka:
      retention.ms: 60000
      topic:
        topicName: task-topic       # Name of the Kafka topic
        partitions: 2         # Number of partitions for the topic
        replication-factor:  1
    manager:
      mode: single  # use "single" if you want to disable Kafka or multi

#While creating Embed token
# ekey -> Generating Embed Encrypted insternal token.
# tokenKey -> For generating Embed authentication token
embed:
  ekey: ActiveInteigence
  tokenKey: H0WWWrNDCCoVKVPXMSei9/+rDJcLbgkEOXhayw790lY=
  iscustomtoken: false

logging:
  level:
    liquibase: OFF

# Token used for MicroServices Internal Authentication
aiv-internalToken: ActiveIntelligence
management.metrics.mongo.command.enabled: false
management.metrics.mongo.connectionpool.enabled: false

#jasper.connection: true,java:comp/env/jdbc/classicmodels
# Default Jndi connnection Datasources
# external.db.1: jdbc,mysql,ClassicModels,true,java:comp/env/jdbc/classicmodels
#external.db.2: olap,SampleData,mondrian.olap4j.MondrianOlap4jDriver,jdbc:mondrian:DataSource,D:/Repositories/AIV/tomcat/data/sampledata.mondrian.xml,true,org.hsqldb.jdbcDriver,java:comp/env/jdbc/SampleData
