# Default values for aiv.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/giap-aivhub/docker-aiv
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "6.3.4-debian12"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Command to run in the container
command: []

# Config parts
env: {}

volumeMounts:
- mountPath: /var/lib/aiv/repository/econfig/logback.xml
  subPath: logback.xml
  name: files

files:
  logback.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <configuration>
      <springProperty scope="context" name="jsonlogs" source="app.logs.jsonlogs"/>
      <springProperty scope="context" name="showdept" source="app.logs.showdept"/>
      <springProperty scope="context" name="showtraceid" source="app.logs.showtraceid"/>

      <logger name="core" level="INFO" additivity="false">
        <appender-ref ref="CONSOLE"/>
      </logger>

      <logger name="db" level="INFO" additivity="false">
        <appender-ref ref="CONSOLE"/>
      </logger>

      <logger name="data" level="INFO" additivity="false">
        <appender-ref ref="CONSOLE"/>
      </logger>

      <logger name="birt" level="INFO" additivity="false">
        <appender-ref ref="CONSOLE"/>
      </logger>

      <logger name="rest" level="INFO" additivity="false">
        <appender-ref ref="CONSOLE"/>
      </logger>

      <logger name="jasper" level="INFO" additivity="false">
        <appender-ref ref="CONSOLE"/>
      </logger>

      <root level="INFO">
        <appender-ref ref="CONSOLE"/>
      </root>

    </configuration>

base64_files: {}

# Driver uploader configuration
driver_updater:
  enabled: true
  githubRepo: "aiv-code/docker-aiv"
  githubBranch: "feat/helm"
  image:
    repository: "ghcr.io/giap-aivhub/docker-aiv"
    tag: "helper"
    pullPolicy: "IfNotPresent"
  path: "/var/lib/aiv/drivers"
  resources:
    limits:
      cpu: 200m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 64Mi
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 3000
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: false

# Persistence configuration
persistence:
  enabled: false
  storageClass:
    create: false
    name: gp3
    provisioner: ebs.csi.eks.amazonaws.com
    parameters:
      type: gp3
      fsType: ext4
    volumeBindingMode: WaitForFirstConsumer
    allowVolumeExpansion: true
    annotations:
      storageclass.kubernetes.io/is-default-class: "true"

  # storageClassName: gp3
  accessModes:
    - ReadWriteOnce
  size: 10Gi
  mountPath: /var/lib/aiv/drivers
  annotations: {}

# AI component configuration
ai:
  enabled: false
  replicaCount: 1
  image:
    repository: jits023/aiv-ai
    tag: 6.3.0
    pullPolicy: IfNotPresent
  containerPort: 8001
  env:
    AIV_JUPYTER: aiv-jupyter
    AIV_TOKEN: aivhub
  service:
    type: LoadBalancer
    port: 8001
  persistence:
    enabled: false
    storageClass:
      create: true

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 15
  timeoutSeconds: 20

readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 5
  timeoutSeconds: 1

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
